<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试自启动脚本</title>
      <link href="/2020/04/05/ce-shi-zi-qi-dong-jiao-ben/"/>
      <url>/2020/04/05/ce-shi-zi-qi-dong-jiao-ben/</url>
      
        <content type="html"><![CDATA[<h1 id="测试自启动脚本"><a href="#测试自启动脚本" class="headerlink" title="测试自启动脚本"></a>测试自启动脚本</h1><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Hexo 2.x 用户复制这段</span><span class="token comment" spellcheck="true">//hexo.on('new', function(path){</span>  <span class="token comment" spellcheck="true">//spawn('start  "markdown编辑器绝对路径.exe" ' + path);</span><span class="token comment" spellcheck="true">//});</span><span class="token comment" spellcheck="true">// Hexo 3 用户复制这段</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start  "D:\Program Files\Typora\Typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JsTest</title>
      <link href="/2020/04/04/js/"/>
      <url>/2020/04/04/js/</url>
      
        <content type="html"><![CDATA[<h1 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h1><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> searchFunc <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>path<span class="token punctuation">,</span> search_id<span class="token punctuation">,</span> content_id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token string">'use strict'</span><span class="token punctuation">;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        url<span class="token punctuation">:</span> path<span class="token punctuation">,</span>        dataType<span class="token punctuation">:</span> <span class="token string">"xml"</span><span class="token punctuation">,</span>        success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>xmlResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// get the contents from search data</span>            <span class="token keyword">var</span> datas <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"entry"</span><span class="token punctuation">,</span> xmlResponse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">{</span>                    title<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    content<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    url<span class="token punctuation">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> $input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>search_id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> $resultContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>content_id<span class="token punctuation">)</span><span class="token punctuation">;</span>            $input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'&lt;ul class=\"search-result-list\">'</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> keywords <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex">/[\s\-]+/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                $resultContent<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// perform local searching</span>                datas<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> isMatch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> content_index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> data_title <span class="token operator">=</span> data<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> data_content <span class="token operator">=</span> data<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;[^>]+>/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> data_url <span class="token operator">=</span> data<span class="token punctuation">.</span>url<span class="token punctuation">;</span>                    <span class="token keyword">var</span> index_title <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> index_content <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">var</span> first_occur <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// only match artiles with not empty titles and contents</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>data_title <span class="token operator">!=</span> <span class="token string">''</span> <span class="token operator">&amp;&amp;</span> data_content <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        keywords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            index_title <span class="token operator">=</span> data_title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>                            index_content <span class="token operator">=</span> data_content<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>index_title <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index_content <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                isMatch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>index_content <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    index_content <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    first_occur <span class="token operator">=</span> index_content<span class="token punctuation">;</span>                                <span class="token punctuation">}</span>                            <span class="token punctuation">}</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token comment" spellcheck="true">// show search results</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>isMatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"&lt;li>&lt;a href='"</span> <span class="token operator">+</span> data_url <span class="token operator">+</span> <span class="token string">"' class='search-result-title'>"</span> <span class="token operator">+</span> data_title <span class="token operator">+</span> <span class="token string">"&lt;/a>"</span><span class="token punctuation">;</span>                        <span class="token keyword">var</span> content <span class="token operator">=</span> data<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/&lt;[^>]+>/g</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>first_occur <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// cut out 100 characters</span>                            <span class="token keyword">var</span> start <span class="token operator">=</span> first_occur <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">;</span>                            <span class="token keyword">var</span> end <span class="token operator">=</span> first_occur <span class="token operator">+</span> <span class="token number">80</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                end <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">></span> content<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                end <span class="token operator">=</span> content<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">var</span> match_content <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// highlight all keywords</span>                            keywords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">var</span> regS <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span> <span class="token string">"gi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                match_content <span class="token operator">=</span> match_content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>regS<span class="token punctuation">,</span> <span class="token string">"&lt;em class=\"search-keyword\">"</span> <span class="token operator">+</span> keyword <span class="token operator">+</span> <span class="token string">"&lt;/em>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"&lt;p class=\"search-result\">"</span> <span class="token operator">+</span> match_content <span class="token operator">+</span> <span class="token string">"...&lt;/p>"</span>                        <span class="token punctuation">}</span>                        str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"&lt;/li>"</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"&lt;/ul>"</span><span class="token punctuation">;</span>                $resultContent<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> str<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> jsDeliver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testTop</title>
      <link href="/2020/04/04/testtop/"/>
      <url>/2020/04/04/testtop/</url>
      
        <content type="html"><![CDATA[<h1 id="测试开头字段"><a href="#测试开头字段" class="headerlink" title="测试开头字段"></a>测试开头字段</h1><blockquote><p>现在来测试，这是引用端</p></blockquote><p>接下来要看各个字段有什么变化</p><h1 id="yijia"><a href="#yijia" class="headerlink" title="yijia"></a>yijia</h1><h2 id="erji"><a href="#erji" class="headerlink" title="erji"></a>erji</h2><h3 id="sanji"><a href="#sanji" class="headerlink" title="sanji"></a>sanji</h3><p>dfafdfsfdfas</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新博客</title>
      <link href="/2020/04/03/xin-bo-ke/"/>
      <url>/2020/04/03/xin-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="试试看英文单引号会不会改变"><a href="#试试看英文单引号会不会改变" class="headerlink" title="试试看英文单引号会不会改变"></a>试试看英文单引号会不会改变</h2><p>‘english’     </p>]]></content>
      
      
      <categories>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo博客</title>
      <link href="/2020/04/02/da-jian-hexo-bo-ke/"/>
      <url>/2020/04/02/da-jian-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<blockquote><p>利用hexo+github搭建个人博客</p></blockquote><p>@[toc]</p><h2 id="安装git和node-js"><a href="#安装git和node-js" class="headerlink" title="安装git和node.js"></a>安装git和node.js</h2><ol><li>node.js下载地址：node.js/org/en<ol><li>查看：  <code>node   -v</code></li></ol></li><li>git配置：<ol><li><code>git    config     --global    user.name    &quot;xuelingyuanren&quot;</code></li><li><code>git    config     --global    user.email    &quot;xuelingyuanren@qq.com&quot;</code></li><li><code>git    config      --list</code></li></ol></li></ol><h2 id="安装淘宝镜像源"><a href="#安装淘宝镜像源" class="headerlink" title="安装淘宝镜像源"></a>安装淘宝镜像源</h2><ol><li><code>npm  install    -g    cnpm   --registry=https://registry.npm.taobao.org</code></li><li><code>cnpm   -v</code></li></ol><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ol><li><code>cnpm   install    -g   hexo-cli</code></li><li><code>hexo     -v</code></li></ol><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><ol><li><code>hexo  init</code></li><li><code>ls   -l</code></li><li><code>hexo    s</code></li></ol><h2 id="将博客部署到github中"><a href="#将博客部署到github中" class="headerlink" title="将博客部署到github中"></a>将博客部署到github中</h2><h3 id="安装hexo部署插件"><a href="#安装hexo部署插件" class="headerlink" title="安装hexo部署插件"></a>安装hexo部署插件</h3><ol><li><code>cnpm   install   --save   hexo-deployer-git</code></li></ol><h3 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h3><ul><li>type:git</li><li>repo:<a href="https://github.com/xuelingyuanren/xuelingyuanren.github.io.git" target="_blank" rel="noopener">https://github.com/xuelingyuanren/xuelingyuanren.github.io.git</a></li><li>branch:master</li></ul><h3 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h3><p><code>hexo  g</code></p><h3 id="启动（本地查看）"><a href="#启动（本地查看）" class="headerlink" title="启动（本地查看）"></a>启动（本地查看）</h3><p><code>hexo    s</code></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p><code>hexo   d</code></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><h3 id="下载yilia主题"><a href="#下载yilia主题" class="headerlink" title="下载yilia主题"></a>下载yilia主题</h3><p><code>git  clone http://github.com/litten/hexo-theme-yilia.git      themes/yilia</code></p><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><p>theme:yilia</p><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><p><code>hexo   clean</code></p><h3 id="生成-1"><a href="#生成-1" class="headerlink" title="生成"></a>生成</h3><p><code>hexo   g</code></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p><code>hexo    s</code></p><h3 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h3><p><code>hexo   d</code></p><h2 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h2><h3 id="在域名管理里面添加CName记录"><a href="#在域名管理里面添加CName记录" class="headerlink" title="在域名管理里面添加CName记录"></a>在域名管理里面添加CName记录</h3><h3 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h3><ul><li>方法一：直接在主目录中新建CNAME文件，并添加域名记录</li><li>方法二：在github设置里面直接添加域名，CNAME文件会自动生成</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客2</title>
      <link href="/2020/04/02/bo-ke-2/"/>
      <url>/2020/04/02/bo-ke-2/</url>
      
        <content type="html"><![CDATA[<h1 id="测试标题1"><a href="#测试标题1" class="headerlink" title="测试标题1"></a>测试标题1</h1><blockquote><p>blockquotes</p><p>块引用</p></blockquote><p>[toc]</p><h2 id="测试标题2"><a href="#测试标题2" class="headerlink" title="测试标题2"></a>测试标题2</h2><p>测试2</p><h3 id="测试标题3"><a href="#测试标题3" class="headerlink" title="测试标题3"></a>测试标题3</h3><p>测试3</p><h3 id="测试标题31"><a href="#测试标题31" class="headerlink" title="测试标题31"></a>测试标题31</h3><p>测试31</p><h2 id="测试标题21"><a href="#测试标题21" class="headerlink" title="测试标题21"></a>测试标题21</h2><p>测试21</p><h2 id="测试标题22"><a href="#测试标题22" class="headerlink" title="测试标题22"></a>测试标题22</h2><p>测试22</p><h3 id="测试标题33"><a href="#测试标题33" class="headerlink" title="测试标题33"></a>测试标题33</h3><p>测试33</p><h4 id="测试标题44"><a href="#测试标题44" class="headerlink" title="测试标题44"></a>测试标题44</h4>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
